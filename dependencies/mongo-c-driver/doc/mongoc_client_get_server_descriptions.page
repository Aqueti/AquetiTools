<?xml version="1.0"?>

<page xmlns="http://projectmallard.org/1.0/"
      type="topic"
      style="function"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/experimental/ui/"
      id="mongoc_client_get_server_descriptions">

  <info>
    <link type="guide" xref="mongoc_client_t" group="function"/>
  </info>
  <title>mongoc_client_get_server_descriptions()</title>

  <section id="synopsis">
    <title>Synopsis</title>
    <synopsis><code mime="text/x-csrc"><![CDATA[mongoc_server_description_t **
mongoc_client_get_server_descriptions (
   const mongoc_client_t        *client,
   size_t                       *n);]]></code></synopsis>
    <p>Fetches an array of <code xref="mongoc_server_description_t">mongoc_server_description_t</code> structs for all known servers in the topology. Returns no servers until the client connects. Returns a single server if the client is directly connected, or all members of a replica set if the client's MongoDB URI includes a "replicaSet" option, or all known mongos servers if the MongoDB URI includes a list of them.</p>
    <screen><code mime="text/x-csrc"><![CDATA[void
show_servers (const mongoc_client_t *client)
{
   bson_t *b = BCON_NEW ("ping", BCON_INT32 (1));
   bson_error_t error;
   bool r;
   mongoc_server_description_t **sds;
   size_t i, n;

   /* ensure client has connected */
   r = mongoc_client_command_simple (client, "db", b, NULL, NULL, &error);
   if (!r) {
      MONGOC_ERROR ("could not connect: %s\n", error.message);
      return;
   }

   sds = mongoc_client_get_server_descriptions (client, &n);

   for (i = 0; i < n; ++i) {
      printf ("%s\n", mongoc_server_description_host (sds[i])->host_and_port);
   }

   mongoc_server_descriptions_destroy_all (sds, n);
   bson_destroy (&b);
}
]]></code></screen>
  </section>

  <section id="parameters">
    <title>Parameters</title>
    <table>
      <tr><td><p>client</p></td><td><p>A <code xref="mongoc_client_t">mongoc_client_t</code>.</p></td></tr>
      <tr><td><p>n</p></td><td><p>Receives the length of the descriptions array.</p></td></tr>
    </table>
  </section>

  <section id="return">
    <title>Returns</title>
    <p>A newly allocated array that must be freed with <code xref="mongoc_server_descriptions_destroy_all">mongoc_server_descriptions_destroy_all</code>.</p>
  </section>

</page>
