<?xml version="1.0"?>
<page xmlns="http://projectmallard.org/1.0/"
      type="topic"
      style="function"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/experimental/ui/"
      id="mongoc_cursor_new_from_command_reply">
  <info>
    <link type="guide" xref="mongoc_cursor_t" group="function"/>
  </info>
  <title>mongoc_cursor_new_from_command_reply()</title>

  <section id="synopsis">
    <title>Synopsis</title>
    <synopsis><code mime="text/x-csrc"><![CDATA[mongoc_cursor_t *
mongoc_cursor_new_from_command_reply (mongoc_client_t *client,
                                      bson_t          *reply,
                                      uint32_t         server_id);]]></code></synopsis>
  </section>

  <section id="parameters">
    <title>Parameters</title>
    <table>
      <tr><td><p>client</p></td><td><p>A <code xref="mongoc_client_t">mongoc_client_t</code>.</p></td></tr>
      <tr><td><p>reply</p></td><td><p>The reply to a command, such as "aggregate", "find", or "listCollections", that returns a cursor document. The reply is destroyed by <code>mongoc_cursor_new_from_command_reply</code> and must not be accessed afterward.</p></td></tr>
      <tr><td><p>server_id</p></td><td><p>The opaque id of the server used to execute the command.</p></td></tr>
    </table>
  </section>

  <section id="description">
    <title>Description</title>
    <p>Some MongoDB commands return a "cursor" document. For example, given an "aggregate" command:</p>
    <code>{ "aggregate" : "collection", "pipeline" : [], "cursor" : {}}</code>
    <p>The server replies:</p>
    <code>{
   "cursor" : {
   "id" : 1234,
   "ns" : "db.collection",
   "firstBatch" : [ ]
   },
   "ok" : 1
}</code>
    <p><code>mongoc_cursor_new_from_command_reply</code> is a low-level function that initializes a <code xref="mongoc_cursor_t">mongoc_cursor_t</code> from such a reply.</p>
    <p>Use this function only for building a language driver that wraps the C Driver. When writing applications in C, higher-level functions such as <code xref="mongoc_collection_aggregate">mongoc_collection_aggregate</code> are more appropriate, and ensure compatibility with a range of MongoDB versions.</p>
  </section>

  <section id="return">
    <title>Returns</title>
    <p>A <code xref="mongoc_cursor_t">mongoc_cursor_t</code>. On failure, the cursor's error is set. Check for failure with <code xref="mongoc_cursor_error">mongoc_cursor_error</code>.</p>
  </section>

</page>
