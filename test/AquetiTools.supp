# This is internal to shared_mutex and verified to not be an issue
{
   <lockwrongorder>
   Helgrind:LockOrder
   obj:/usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so
   fun:_ZL20__gthread_mutex_lockP15pthread_mutex_t
   fun:_ZNSt5mutex4lockEv
   fun:_ZN3atl12shared_mutex13unlock_sharedEv
}

# This is internal to shared_mutex and verified to not be an issue
{
   <lockwrongorder2>
   Helgrind:LockOrder
   obj:/usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so
   fun:_ZL20__gthread_mutex_lockP15pthread_mutex_t
   fun:_ZNSt5mutex4lockEv
   fun:_ZN3atl12shared_mutex11lock_sharedEv
}

# Data race internal to std::cout - not actually a race
{
   <ostreamrace>
   Helgrind:Race
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
}
{
   <ostreamrace2>
   Helgrind:Race
   fun:_ZNSo6sentryC1ERSo
}
{
   <ostreamrace3>
   Helgrind:Race
   fun:_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
}

# std::atomic save/load is not a race
{
   <atomicload>
   Helgrind:Race
   fun:load
   fun:_ZNKSt6atomicIbEcvbEv
}
{
   <atomicload2>
   Helgrind:Race
   fun:load
   fun:_ZNKSt13__atomic_baseImEcvmEv
}
{
   <atomicstore>
   Helgrind:Race
   fun:store
   fun:_ZNSt13__atomic_baseIbEaSEb
}
{
   <atomicstore2>
   Helgrind:Race
   fun:store
   fun:_ZNSt13__atomic_baseImEaSEm
}

# std::future is thread safe
{
   <future>
   Helgrind:Race
   fun:_ZNKSt10unique_ptrINSt13__future_base12_Result_baseENS1_8_DeleterEE3getEv
}
{
   <future2>
   Helgrind:Race
   fun:_ZNSt13__future_base13_State_baseV2D1Ev
}
{
   <future3>
   Helgrind:Race
   fun:_ZNSt10unique_ptrINSt13__future_base12_Result_baseENS1_8_DeleterEED1Ev
}
{
   <future4>
   Helgrind:Race
   fun:_ZN3atl11TaskManagerIiiE10performJobEiSt8functionIFivEE
}
{
   <future5>
   Helgrind:Race
   fun:_ZNSt13__future_base15_Deferred_stateISt12_Bind_simpleIFSt8functionIFivEEvEEiED1Ev
}
{
   <future6>
   Helgrind:Race
   fun:_ZNSt10unique_ptrINSt13__future_base7_ResultIiEENS0_12_Result_base8_DeleterEED1Ev
}
{
   <future7>
   Helgrind:Race
   fun:_ZNSt13__future_base7_ResultIiED1Ev
}

# protected by atomic swap
{
   <threadrace>
   Helgrind:Race
   fun:_ZSt4swapINSt6thread2idEEvRT_S3_
   fun:_ZNSt6thread4swapERS_
   fun:_ZNSt6threadaSEOS_
   fun:_ZN3atl6Thread5StartEv
}
